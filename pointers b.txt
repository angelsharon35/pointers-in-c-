#include <iostream>
using namespace std;
int main() {
    
    int a = 10;
    //declaration
    int *ptr ;
    ptr =  &a;
    
    cout << " a = " << a << endl ;
    cout << "adress of a = " <<&a <<endl;
    cout << "adress of a through pointer = " << ptr << endl ;
    cout << "*ptr = " << *ptr <<endl ;
    return 0;
}

-------------------------------------------------------------------------------------------------------------------

//function overloading in polymorphism

#include <iostream>
using namespace std;
 
 class Math {
  public:
    int add(int a,int b) {
        return a+b;
    }
    double add (double a,double b){
        return a+b;
    }
 };
 
 int main() {
 Math m;
 cout <<m.add(5,10) <<endl; //calls int version
 cout <<m.add(2.5,3.7) <<endl; // calls double version
    return 0;
}

----------------------------------------------------------------------------------------------------------------------------

// run time polymorphism

#include <iostream>
using namespace std;
 class Animal {
     public:
          virtual void sound() {
              cout<< "animal makes sound" << endl;
 }      
 
};
class Dog: public Animal 
{
      public:
      void sound()   // over ride base function
      {
      cout << "dog barks" << endl;
      }
};
int main() {
    Animal* a; //base class pointer
    Dog d;
    a = &d;
    a->sound(); // output animal makes soound
      
   return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream> //for file handling
using namespace std;

int main() {
       //create and open a file
       ofstream file("data.txt");
       
       //write something to the file
       file << "hello students! welcome to file handling in c++.";
       file.close(); //close the file after writing 
       
       //read the same file
       ifstream readfile("data.txt");
       string line;
       getline(readline,line); //read one line from the file
       cout<<"file content:"<<line<<endl;
       
       readfile.close(); //always close the file
       
       return 0;
}  
      
   
